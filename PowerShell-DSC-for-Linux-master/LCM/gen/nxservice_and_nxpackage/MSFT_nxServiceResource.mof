[ClassVersion("1.0.0"), FriendlyName("nxService"), SupportsInventory]
class MSFT_nxServiceResource : OMI_BaseResource
{
       [key,InventoryFilter] string Name;
       [write,required,ValueMap{"init", "upstart", "systemd"},Values{"init","upstart","systemd"},InventoryFilter] string Controller;
       [write,InventoryFilter] boolean Enabled;
       [write,ValueMap{"Running", "Stopped"},Values{"Running", "Stopped"},InventoryFilter] string State;
       [read] string Path;
       [read] string Description;
       [read] string Runlevels;


 		[static] uint32 InventoryTargetResource(
								[in, EmbeddedInstance ("MSFT_nxServiceResource")] string InputResource,
								[out, EmbeddedInstance ("MSFT_nxServiceResource")] string inventory[]
							);

 		[static,
         Description (
             "Get resource states based on input configuration file." )]
    uint32 GetTargetResource(
            [in,
             EmbeddedInstance ("MSFT_nxServiceResource"),
             Description (
                "Configuration document that is to be applied." )]
        string InputResource,

            [in,
             Description (
                "Flags passed to the providers. Reserved for future use." )]
        uint32 Flags,
            [out,
             EmbeddedInstance ("MSFT_nxServiceResource"),
             Description (
                "The current state of the specified configuration resources." )]
        string OutputResource
        );
		

        [static,
         Description (
             "Test resource states based on input configuration file." )]
    uint32 TestTargetResource(
            [in,
             EmbeddedInstance("MSFT_nxServiceResource"),
             Description (
                "Configuration document that to be applied." )]
        string InputResource,    
            [in, 
             Description (
                "Flags passed to the providers. reserved for future use." )]
        uint32 Flags,   
            [out,
             Description (
                "True if identical. False otherwise." )]
        boolean Result,     
            [out,
             Description (
                "Context information that the provider can use to optimize the set, This is optional." )]
        uint64 ProviderContext
        );

        [static,
         Description (
            "Set resource states based on input configuration file." )]
    uint32 SetTargetResource(
            [in,
             EmbeddedInstance ("MSFT_nxServiceResource"),
             Description (
                "Configuration document that to be applied." )]
        string InputResource,    
            [in,
             Description (
                "Context information that the provider can use to optimize the set from TestTargetResource, This is optional." )]
        uint64 ProviderContext,
            [in,
             Description (
                "Flags passed to the providers. reserved for future use." )]
        uint32 Flags
		);
		
};
